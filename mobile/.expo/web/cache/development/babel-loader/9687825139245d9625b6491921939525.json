{"ast":null,"code":"import { getAssetByID } from 'react-native/Libraries/Image/AssetRegistry';\nimport AssetSourceResolver from \"./AssetSourceResolver\";\n\nvar _customSourceTransformer;\n\nexport function setCustomSourceTransformer(transformer) {\n  _customSourceTransformer = transformer;\n}\nexport default function resolveAssetSource(source) {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  var asset = getAssetByID(source);\n\n  if (!asset) {\n    return undefined;\n  }\n\n  var resolver = new AssetSourceResolver(location.origin, null, asset);\n\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n\n  return resolver.defaultAsset();\n}\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get: function get() {\n    return setCustomSourceTransformer;\n  }\n});\nvar pickScale = AssetSourceResolver.pickScale;\nexport { pickScale };","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,4CAA7B;AAEA,OAAOC,mBAAP;;AAEA,IAAIC,wBAAJ;;AAEA,OAAM,SAAUC,0BAAV,CACJC,WADI,EAC+D;EAEnEF,wBAAwB,GAAGE,WAA3B;AACD;AAMD,eAAc,SAAUC,kBAAV,CAA6BC,MAA7B,EAAwC;EACpD,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;IAC9B,OAAOA,MAAP;EACD;;EAED,IAAMC,KAAK,GAAGP,YAAY,CAACM,MAAD,CAA1B;;EACA,IAAI,CAACC,KAAL,EAAY;IACV,OAAOC,SAAP;EACD;;EAED,IAAMC,QAAQ,GAAG,IAAIR,mBAAJ,CAAwBS,QAAQ,CAACC,MAAjC,EAAyC,IAAzC,EAA+CJ,KAA/C,CAAjB;;EACA,IAAIL,wBAAJ,EAA8B;IAC5B,OAAOA,wBAAwB,CAACO,QAAD,CAA/B;EACD;;EACD,OAAOA,QAAQ,CAACG,YAAT,EAAP;AACD;AAEDC,MAAM,CAACC,cAAP,CAAsBT,kBAAtB,EAA0C,4BAA1C,EAAwE;EACtEU,GADsE,iBACnE;IACD,OAAOZ,0BAAP;EACD;AAHqE,CAAxE;AAMO,IAAQa,SAAR,GAAsBf,mBAAtB,CAAQe,SAAR","names":["getAssetByID","AssetSourceResolver","_customSourceTransformer","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","undefined","resolver","location","origin","defaultAsset","Object","defineProperty","get","pickScale"],"sourceRoot":"","sources":["../src/resolveAssetSource.web.ts"],"sourcesContent":["import { getAssetByID } from 'react-native/Libraries/Image/AssetRegistry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | undefined {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n\n  const resolver = new AssetSourceResolver(location.origin, null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"]},"metadata":{},"sourceType":"module"}